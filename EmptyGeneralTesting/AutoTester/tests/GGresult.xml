<?xml-stylesheet type="text/xsl" href="analysis.xsl"?>
<test_results>
<info>
<name>Release</name><parsing_time_taken>20.000000</parsing_time_taken>
</info>
<queries>
<query>
<id Affects="1" ReturnBoolean="1" SuchThat="1" CondNum="3" RelNum="1" comment="Affecting yourself">1</id><querystr><![CDATA[assign a; Select BOOLEAN such that Affects (2, 2);]]></querystr>
<stuans></stuans>
<correct>false</correct>
<time_taken>42.000000</time_taken>
<failed>
<missing>false</missing>
<additional></additional>
<summary>
<expected>1</expected>
<matched>0</matched>
<missing>1</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" Parent="3" SuchThat="1" CondNum="5" RelNum="3" comment="Multiple Parents">2</id><querystr><![CDATA[stmt s1; stmt s2; stmt s3; stmt s4; Select s1, s2, s3, s4 such that Parent(s1, s2) and Parent(s2, s3) and Parent(s3, s4);]]></querystr>
<stuans></stuans>
<correct>4,5,6,7,8,9,10,11</correct>
<time_taken>43.000000</time_taken>
<failed>
<missing>10,11,4,5,6,7,8,9</missing>
<additional></additional>
<summary>
<expected>8</expected>
<matched>0</matched>
<missing>8</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" Follows="3" SuchThat="1" CondNum="5" RelNum="3" comment="Multiple Follows">3</id><querystr><![CDATA[stmt s1; stmt s2; stmt s3; stmt s4; Select s1, s2, s3, s4 such that Follows(s1, s2) and Follows(s2, s3) and Follows(s3, s4);]]></querystr>
<stuans></stuans>
<correct>1,4,12,14,16,18,20</correct>
<time_taken>102.000000</time_taken>
<failed>
<missing>1,12,14,16,18,20,4</missing>
<additional></additional>
<summary>
<expected>7</expected>
<matched>0</matched>
<missing>7</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" CondNum="3" RelNum="1" comment="Modifies Calls">4</id><querystr><![CDATA[stmt s; Select s such that Modifies(s, "x");]]></querystr>
<stuans></stuans>
<correct>22,23,29</correct>
<time_taken>40.000000</time_taken>
<failed>
<missing>22,23,29</missing>
<additional></additional>
<summary>
<expected>3</expected>
<matched>0</matched>
<missing>3</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" Modifies="1" SuchThat="1" With="1" CondNum="4" RelNum="1" comment="Modifies Calls, with">5</id><querystr><![CDATA[stmt s; var v; Select s such that Modifies(s, v) with v.varName = "s";]]></querystr>
<stuans></stuans>
<correct>25,27,32</correct>
<time_taken>47.000000</time_taken>
<failed>
<missing>25,27,32</missing>
<additional></additional>
<summary>
<expected>3</expected>
<matched>0</matched>
<missing>3</missing>
<additional>0</additional>
</summary>
</failed>
</query>
<query>
<id ReturnTuple="1" Uses="1" SuchThat="1" CondNum="3" RelNum="1" comment="Uses Calls at end of proc">6</id><querystr><![CDATA[stmt s; Select s such that Uses(s, "t")]]></querystr>
<stuans>28,33</stuans>
<correct>28,33</correct>
<time_taken>130.000000</time_taken>
<passed/>
</query>
<query>
<id ReturnTuple="1" Calls="2" Modifies="1" SuchThat="1" With="1" CondNum="6" RelNum="3" comment="Uses Calls, with">7</id><querystr><![CDATA[stmt s; var v; proc p; Select s such that Calls(s, p) and Calls(s, "Za") and Modifies(s, v) with v.varName = "z" and p.procName="Za";]]></querystr>
<stuans></stuans>
<correct>26</correct>
<time_taken>49.000000</time_taken>
<failed>
<missing>26</missing>
<additional></additional>
<summary>
<expected>1</expected>
<matched>0</matched>
<missing>1</missing>
<additional>0</additional>
</summary>
</failed>
</query>
</queries>
</test_results>
